<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace属性：用于指定当前的映射文件和哪个接口进行映射，需要指定接口的文件路径，需要标注包的完整路径接口-->
<mapper namespace="com.lxc.store.mapper.UserMapper">

    <!--  自定义映射规则：resultMap标签来完成映射规则的定义  -->
    <!--
        id属性：给这个映射负责分配一个唯一的id值，对应的就是resultMap="id属性的值"属性的取值
        type：与哪一个实体类进行映射
    -->
    <resultMap id="UserEntityMap" type="com.lxc.store.entity.User">
        <!--只针对字段与属性不一致进行处理,但是主键不能等省略-->
        <id property="uid" column="uid"></id>
        <result property="isDelete" column="is_delete"></result>
        <result property="createdUser" column="created_user"></result>
        <result property="createdTime" column="created_time"></result>
        <result property="modifiedUser" column="modified_user"></result>
        <result property="modifiedTime" column="modified_time"></result>
        <result property="email" column="email"></result>
    </resultMap>


    <!--id表示映射的接口中方法的名称，直接在标签的内部编写SQL语句-->
    <!--
        useGeneratedKeys属性：开启某个字段的值递增（主键设置为自增）
        keyProperty属性：将表中的哪个字段作为主键进行自增
    -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user(
            username,password,salt,phone,email,gender,avatar,is_delete,created_user,created_time,modified_user,modified_time
        )VALUES (
            #{username},#{password},#{salt},#{phone},#{email},#{gender},#{avatar},#{isDelete},#{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime}
        )
    </insert>


    <!--  Select语句在执行的时候，查询的结果是一个对象，多个对象。  -->
    <!--
        ResultType：表示查询的结果集类型，只需要指定对应映射类的类型，并且包含完整包接口resultType="com.lxc.store.entity.User"  这是表的字段与类的属性名称一致时可以这么做
        ResultMap：当表的字段与类的属性名称不一致时，这时候需要自定义查询结果集的映射规则
    -->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username=#{username}
    </select>

    <update id="updatePasswordByUid">
        UPDATE t_user SET
            password=#{password},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where uid = #{uid}
    </update>

    <select id="findByUid" resultMap="UserEntityMap">
        SELECT * from t_user where uid=#{uid};
    </select>

    <!-- Mybatis中的if表示条件判断，test接收的是返回值为boolean类型的条件-->
    <update id="updateInfoByUid">
        UPDATE t_user SET
        <if test="phone!=null">phone = #{phone},</if>
        <if test="email!=null">email = #{email},</if>
        <if test="gender!=null">gender = #{gender},</if>
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where uid = #{uid}

    </update>
    
    <update id="updateAvatarByUid">
        UPDATE t_user SET
            avatar=#{avatar},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where uid = #{uid}
    </update>
</mapper>